{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodosList","todos","map","Header","prevProps","prevState","bgColor","Math","floor","random","headerSpan","document","getElementById","innerHTML","backgroundColor","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","addTodoProps","onSubmit","placeholder","TodoContainer","show","handleChange","delTodo","axios","delete","then","reponse","filter","addTodoItem","post","response","data","get","ReactDOM","render"],"mappings":"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","file":"static/js/main.8a243603.chunk.js","sourcesContent":["//import { render } from \"@testing-library/react\"\r\nimport React from \"react\"\r\n\r\nclass TodoItem extends React.Component {\r\n    componentWillUnmount() {\r\n        alert(\"Item about to be deleted!\");\r\n      }\r\n    render() {\r\n        const completedStyle = {\r\n            fontStyle: \"italic\",\r\n            color: \"#d35e0f\",\r\n            opacity: 0.4,\r\n            textDecoration: \"line-through\",\r\n          };\r\n            const { completed, id, title } = this.props.todo\r\n        return <li className=\"todo-item\">\r\n            <input \r\n                type=\"checkbox\"\r\n                checked={completed}\r\n                onChange={() => this.props.handleChangeProps(id)}\r\n                />\r\n            <button onClick={() => this.props.deleteTodoProps(id)}>\r\n                Delete\r\n            </button>\r\n            <span style={completed ? completedStyle : null}>\r\n                {title}\r\n            </span>\r\n    \r\n            </li>\r\n    }\r\n\r\n}\r\n\r\nexport default TodoItem","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodosList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"TodosList\">\r\n        {this.props.todos.map(todo => (\r\n          //<li key={todo.id}>{todo.title}</li>\r\n          <TodoItem\r\n            key={todo.id}\r\n            todo={todo}\r\n            handleChangeProps={this.props.handleChangeProps}\r\n            deleteTodoProps={this.props.deleteTodoProps}\r\n            />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodosList","import React, { Component } from \"react\"\r\n\r\nclass Header extends Component {\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        var x = Math.floor(Math.random() * 256);\r\n        var y = Math.floor(Math.random() * 256);\r\n        var z = Math.floor(Math.random() * 256);\r\n        var bgColor = \"rgb(\" + x + \",\" + y + \",\" + z + \")\";\r\n      \r\n        if (prevProps.headerSpan !== this.props.headerSpan) {\r\n          document.getElementById(\"inH1\").innerHTML = \"clicked\";\r\n          document.getElementById(\"inH1\").style.backgroundColor = bgColor;\r\n        }\r\n      }\r\n      \r\n  render() {\r\n    const headerStyle = {\r\n      padding: \"20px 0\",\r\n      lineHeight: \"2em\",\r\n    }\r\n    return (\r\n      <header style={headerStyle}>\r\n        <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n          Simple Todo App <span id=\"inH1\"></span>\r\n        </h1>\r\n        <p style={{ fontSize: \"19px\" }}>\r\n          Please add to-dos item(s) through the input field\r\n        </p>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React, { Component } from \"react\"\r\n\r\nclass InputTodo extends Component {\r\n\r\n    state = {\r\n        title: \"\"\r\n        };\r\n\r\n    onChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    \r\n\r\n\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.addTodoProps(this.state.title);\r\n        this.setState({\r\n          title: \"\"\r\n        });\r\n      };\r\n\r\n  render() {\r\n    return (\r\n        <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n        <input \r\n            type=\"text\" \r\n            className=\"input-text\"\r\n            placeholder=\"Add todo...\" \r\n            value={this.state.title}\r\n            name=\"title\"\r\n            onChange={this.onChange}\r\n        />\r\n        <input type=\"submit\" className=\"input-submit\" value=\"Submit\" />\r\n      </form>\r\n    )\r\n  }\r\n}\r\nexport default InputTodo","import React from \"react\"\r\nimport TodosList from \"./TodosList\";\r\nimport Header from \"./Header\";\r\nimport InputTodo from \"./InputTodo\"\r\n//import { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass TodoContainer extends React.Component {\r\nstate = {\r\n    todos: [],\r\n    show: false\r\n    };\r\n    \r\n    handleChange = id => {\r\n        this.setState({\r\n          todos: this.state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n              todo.completed = !todo.completed;\r\n            }\r\n            return todo;\r\n          }),\r\n          show: !this.state.show,\r\n        });\r\n      };\r\n     \r\n      delTodo = id => {\r\n        axios\r\n          .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n          .then(reponse =>\r\n            this.setState({\r\n              todos: [\r\n                ...this.state.todos.filter(todo => {\r\n                  return todo.id !== id\r\n                }),\r\n              ],\r\n            })\r\n          )\r\n      }\r\n\r\n      addTodoItem = title => {\r\n        axios\r\n          .post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n            title: title,\r\n            completed: false,\r\n          })\r\n          .then(response =>\r\n            this.setState({\r\n              todos: [...this.state.todos, response.data],\r\n            })\r\n          )\r\n      }\r\n\r\n      componentDidMount() {\r\n        axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n          .then(response => this.setState({ todos: response.data }));\r\n      }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"container\">\r\n            <Header headerSpan={this.state.show}/>\r\n            <InputTodo \r\n                addTodoProps={this.addTodoItem} \r\n            />\r\n            <TodosList \r\n                todos={this.state.todos} \r\n                handleChangeProps={this.handleChange} \r\n                deleteTodoProps={this.delTodo} \r\n            />\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default TodoContainer","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\n//component file\r\nimport TodoContainer from \"./components/TodoContainer\"\r\nimport \"./App.css\"\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"))"],"sourceRoot":""}